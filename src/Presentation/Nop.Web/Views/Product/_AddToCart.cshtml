@model ProductDetailsModel.AddToCartModel
@using Nop.Core.Domain.Orders
@if (Model.UpdatedShoppingCartItemId > 0)
{
    <input asp-for="UpdatedShoppingCartItemId" type="hidden"/>
}
@if (!Model.DisableBuyButton || Model.CustomerEntersPrice)
{
		@if (Model.CustomerEntersPrice)
		{
			<div class="customer-entered-price">
				<div class="price-input">
					<label asp-for="CustomerEnteredPrice" asp-postfix=":" class="enter-price-label"></label>
					@*round price*@
					<input asp-for="CustomerEnteredPrice" value="@Convert.ToInt32(Math.Ceiling(Model.CustomerEnteredPrice))" class="enter-price-input" />
				</div>
				<div class="price-range">
					@Model.CustomerEnteredPriceRange
				</div>
			</div>
		}
		@if (!string.IsNullOrEmpty(Model.MinimumQuantityNotification))
		{
			<div class="min-qty-notification">@Model.MinimumQuantityNotification</div>
		}
		@if (!Model.DisableBuyButton)
		{
			<button class="btn btn-blue mb-2 rounded" id="add-to-cart-button-@Model.ProductId" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');StartLoadingCart();return false;">@T("prod.addtocart")</button>
		}
}