@model CustomerRewardPointsModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-reward-points-page");
}
<nav class="breadcrumb-wrap" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Bed4you</a></li>
        <li class="breadcrumb-item"><a href="/customer/info">@T("account.cabinet")</a></li>
        <li class="breadcrumb-item active"><a href="#">@T("account.bonuses")</a></li>
    </ol>
</nav>
<div class="row cabinet">
    <div class="offset-xl-1 col-xl-8">
        <div class="title-wrap clearfix">
            <h1 class="title float-left">@T("account.bonuses")</h1>
            <button class="btn btn-blue float-right btn-sm" onclick="window.location.replace('/logout')">@T("account.exit")</button>
        </div>
        @await Component.InvokeAsync("AccountMenu", new { active = "/rewardpoints/history" })
        <div class="cabinet-info rounded">
            <div class="row bonus-wrap">
                @if (Model.RewardPoints.Count > 0)
                {
                    <div class="row w-100 font-weight-bold">
                        <div class="col-sm-3">@T("rewardpoints.date")</div>
                        <div class="col-sm-3">@T("rewardpoints.added")</div>
                        <div class="col-sm-3">@T("rewardpoints.removed")</div>
                        <div class="col-sm-3">@T("rewardpoints.balance")</div>
                    </div>
                    <div class="line w-100"></div>
                    @foreach (var item in Model.RewardPoints)
                    {
                        <div class="row w-100">
                            <div class="col-sm-3">@item.CreatedOn</div>
                            <div class="col-sm-3">@((item.Points > 0) ? item.Points.ToString() : "—")</div>
                            <div class="col-sm-3">@((item.Points < 0) ? (0 - item.Points).ToString() : "—")</div>
                            <div class="col-sm-3">@item.PointsBalance</div>
                        </div>
                        @if (item != Model.RewardPoints.LastOrDefault())
                        {
                            <div class="line w-100"></div>
                        }
                     }
                }
            </div>
        </div>
    </div>
</div>
                    @*<div class="section reward-points-history">
                        <div class="title">
                            <strong>@T("RewardPoints.History")</strong>
                        </div>
                        @if (Model.RewardPoints.Count > 0)
                        {
                                                        var pager = Html.Pager(Model.PagerModel);
                            if (!string.IsNullOrEmpty(pager.ToHtmlString()))
                            {
                                <div class="pager">
                                    @pager
                                </div>
                            }
                        }
                        else
                        {
                            <div class="no-data">
                                @T("RewardPoints.NoHistory")
                            </div>
                        }
                    </div>*@
