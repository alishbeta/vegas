@*<div class="page account-page customer-info-page">
		<div class="page-title">
			<h1>@T("Account.MyAccount") - @T("Account.CustomerInfo")</h1>
		</div>
		<div class="page-body">
			<form asp-route="CustomerInfo" method="post">
				<div asp-validation-summary="ModelOnly" class="message-error"></div>
				<div class="fieldset">
					<div class="title">
						<strong>@T("Account.YourPersonalDetails")</strong>
					</div>
					<div class="form-fields">
						@if (Model.GenderEnabled)
						{
							<div class="inputs">
								<label>@T("Account.Fields.Gender"):</label>
								<div class="gender">
									<span class="male">
										<input type="radio" asp-for="Gender" value="M" checked="@(Model.Gender == "M")" id="gender-male" />
										<label class="forcheckbox" for="gender-male">@T("Account.Fields.Gender.Male")</label>
									</span>
									<span class="female">
										<input type="radio" asp-for="Gender" value="F" checked="@(Model.Gender == "F")" id="gender-female" />
										<label class="forcheckbox" for="gender-female">@T("Account.Fields.Gender.Female")</label>
									</span>
								</div>
							</div>
						}
						<div class="inputs">
							<label asp-for="FirstName" asp-postfix=":"></label>
							<input asp-for="FirstName" />
							<nop-required />
							<span asp-validation-for="FirstName"></span>
						</div>
						<div class="inputs">
							<label asp-for="LastName" asp-postfix=":"></label>
							<input asp-for="LastName" />
							<nop-required />
							<span asp-validation-for="LastName"></span>
						</div>
						@if (Model.DateOfBirthEnabled)
						{
							<div class="inputs date-of-birth">
								<label>@T("Account.Fields.DateOfBirth"):</label>
								<nop-date-picker asp-day-name="@Html.NameFor(x => x.DateOfBirthDay)"
												 asp-month-name="@Html.NameFor(x => x.DateOfBirthMonth)"
												 asp-year-name="@Html.NameFor(x => x.DateOfBirthYear)"
												 asp-begin-year="@(DateTime.Now.Year - 110)"
												 asp-end-year="@(DateTime.Now.Year)"
												 asp-selected-day="@Model.DateOfBirthDay"
												 asp-selected-month="@Model.DateOfBirthMonth"
												 asp-selected-year="@Model.DateOfBirthYear" />
								@if (Model.DateOfBirthRequired)
								{
									<nop-required />
								}
								<span asp-validation-for="DateOfBirthDay"></span>
								<span asp-validation-for="DateOfBirthMonth"></span>
								<span asp-validation-for="DateOfBirthYear"></span>
							</div>
						}
						<div class="inputs">
							<label asp-for="Email" asp-postfix=":"></label>
							<input asp-for="Email" />
							<nop-required />
							<span asp-validation-for="Email"></span>
						</div>
						@if (!string.IsNullOrEmpty(Model.EmailToRevalidate))
						{
							<div class="inputs">
								<label asp-for="EmailToRevalidate"></label>
								<span class="email-to-revalidate">@Model.EmailToRevalidate</span>
								<span class="email-to-revalidate-note">
									<em>@T("Account.Fields.EmailToRevalidate.Note")</em>
								</span>
							</div>
						}
						@if (Model.UsernamesEnabled)
						{
							if (Model.AllowUsersToChangeUsernames)
							{
								<div class="inputs">
									<label asp-for="Username" asp-postfix=":"></label>
									<input asp-for="Username" />
									<nop-required />
									<span asp-validation-for="Username"></span>
									@if (Model.CheckUsernameAvailabilityEnabled)
									{
										@await Html.PartialAsync("_CheckUsernameAvailability")
									}
								</div>
							}
							else
							{
								<div class="inputs">
									<label asp-for="Username" asp-postfix=":"></label>
									<span class="readonly-username">@Model.Username</span>
								</div>
							}
						}
					</div>
				</div>
				@if (Model.CompanyEnabled || Model.DisplayVatNumber)
				{
					<div class="fieldset">
						<div class="title">
							<strong>@T("Account.CompanyDetails")</strong>
						</div>
						<div class="form-fields">
							@if (Model.CompanyEnabled)
							{
								<div class="inputs">
									<label asp-for="Company" asp-postfix=":"></label>
									<input asp-for="Company" />
									@if (Model.CompanyRequired)
									{
										<nop-required />
									}
									<span asp-validation-for="Company"></span>
								</div>
							}
							@if (Model.DisplayVatNumber)
							{
								<div class="inputs">
									<label asp-for="VatNumber" asp-postfix=":"></label>
									<input asp-for="VatNumber" />
									<span class="vat-status">@Model.VatNumberStatusNote</span>
									<span class="vat-note">
										<em>@T("Account.Fields.VatNumber.Note")</em>
									</span>
								</div>
							}
						</div>
					</div>
				}
				@if (Model.StreetAddressEnabled ||
		   Model.StreetAddress2Enabled ||
		   Model.ZipPostalCodeEnabled ||
		   Model.CityEnabled ||
		   Model.CountyEnabled ||
		   Model.CountryEnabled)
				{
					<div class="fieldset">
						<div class="title">
							<strong>@T("Account.YourAddress")</strong>
						</div>
						<div class="form-fields">
							@if (Model.StreetAddressEnabled)
							{
								<div class="inputs">
									<label asp-for="StreetAddress" asp-postfix=":"></label>
									<input asp-for="StreetAddress" />
									@if (Model.StreetAddressRequired)
									{
										<nop-required />
									}
									<span asp-validation-for="StreetAddress"></span>
								</div>
							}
							@if (Model.StreetAddress2Enabled)
							{
								<div class="inputs">
									<label asp-for="StreetAddress2" asp-postfix=":"></label>
									<input asp-for="StreetAddress2" />
									@if (Model.StreetAddress2Required)
									{
										<nop-required />
									}
									<span asp-validation-for="StreetAddress2"></span>
								</div>
							}
							@if (Model.ZipPostalCodeEnabled)
							{
								<div class="inputs">
									<label asp-for="ZipPostalCode" asp-postfix=":"></label>
									<input asp-for="ZipPostalCode" />
									@if (Model.ZipPostalCodeRequired)
									{
										<nop-required />
									}
									<span asp-validation-for="ZipPostalCode"></span>
								</div>
							}
							@if (Model.CityEnabled)
							{
								<div class="inputs">
									<label asp-for="City" asp-postfix=":"></label>
									<input asp-for="City" />
									@if (Model.CityRequired)
									{
										<nop-required />
									}
									<span asp-validation-for="City"></span>
								</div>
							}
							@if (Model.CountyEnabled)
							{
								<div class="inputs">
									<label asp-for="County" asp-postfix=":"></label>
									<input asp-for="County" />
									@if (Model.CountyRequired)
									{
										<nop-required />
									}
									<span asp-validation-for="County"></span>
								</div>
							}
							@if (Model.CountryEnabled)
							{
								<div class="inputs">
									<label asp-for="CountryId" asp-postfix=":"></label>
									<select asp-for="CountryId" asp-items="Model.AvailableCountries"></select>
									@if (Model.CountryRequired)
									{
										<nop-required />
									}
									<span asp-validation-for="CountryId"></span>
								</div>
							}
							@if (Model.CountryEnabled && Model.StateProvinceEnabled)
							{
								<div class="inputs">
									<label asp-for="StateProvinceId" asp-postfix=":"></label>
									<select asp-for="StateProvinceId" asp-items="Model.AvailableStates"></select>
									@if (Model.StateProvinceRequired)
									{
										<nop-required />
									}
									<span asp-validation-for="StateProvinceId"></span>
									<span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
								</div>
							}
						</div>
					</div>
				}
				@if (Model.PhoneEnabled || Model.FaxEnabled)
				{
					<div class="fieldset">
						<div class="title">
							<strong>@T("Account.YourContactInformation")</strong>
						</div>
						<div class="form-fields">
							@if (Model.PhoneEnabled)
							{
								<div class="inputs">
									<label asp-for="Phone" asp-postfix=":"></label>
									<input asp-for="Phone" />
									@if (Model.PhoneRequired)
									{
										<nop-required />
									}
									<span asp-validation-for="Phone"></span>
								</div>
							}
							@if (Model.FaxEnabled)
							{
								<div class="inputs">
									<label asp-for="Fax" asp-postfix=":"></label>
									<input asp-for="Fax" />
									@if (Model.FaxRequired)
									{
										<nop-required />
									}
									<span asp-validation-for="Fax"></span>
								</div>
							}
						</div>
					</div>
				}
				@if (Model.NewsletterEnabled || Model.CustomerAttributes.Count > 0)
				{
					<div class="fieldset">
						<div class="title">
							<strong>@T("Account.Options")</strong>
						</div>
						<div class="form-fields">
							@if (Model.NewsletterEnabled)
							{
								<div class="inputs">
									<label asp-for="Newsletter" asp-postfix=":"></label>
									<input asp-for="Newsletter" />
									<span asp-validation-for="Newsletter"></span>
								</div>
							}
							@if (Model.CustomerAttributes.Count > 0)
							{
								@await Html.PartialAsync("_CustomerAttributes", Model.CustomerAttributes)
							}
						</div>
					</div>
				}
				@if (Model.AllowCustomersToSetTimeZone || Model.SignatureEnabled)
				{
					<div class="fieldset">
						<div class="title">
							<strong>@T("Account.Preferences")</strong>
						</div>
						<div class="form-fields">
							@if (Model.AllowCustomersToSetTimeZone)
							{
								<div class="inputs">
									<label asp-for="TimeZoneId" asp-postfix=":"></label>
									<select asp-for="TimeZoneId" asp-items="Model.AvailableTimeZones"></select>
									<span asp-validation-for="TimeZoneId"></span>
								</div>
							}
							@if (Model.SignatureEnabled)
							{
								<div class="inputs">
									<label asp-for="Signature" asp-postfix=":"></label>
									<textarea asp-for="Signature" class="account-signature-text"></textarea>
								</div>
							}
						</div>
					</div>
				}
				@if (Model.NumberOfExternalAuthenticationProviders > 0)
				{
					<div class="fieldset">
						<div class="title">
							<strong>@T("Account.AssociatedExternalAuth")</strong>
						</div>
						@if (Model.AssociatedExternalAuthRecords.Count > 0)
						{
							//existing associated external records
							<div class="table-wrapper">
								<table class="data-table">
									<colgroup>
										<col />
										<col />
										<col />
									</colgroup>
									<thead>
										<tr>
											<th class="auth-method-name">
												@T("Account.AssociatedExternalAuth.AuthMethodName")
											</th>
											<th class="email">
												@T("Account.AssociatedExternalAuth.Email")
											</th>
											<th class="external-id">
												@T("Account.AssociatedExternalAuth.ExternalIdentifier")
											</th>
											@if (Model.AllowCustomersToRemoveAssociations)
											{
												<th class="remove">
													@T("Account.AssociatedExternalAuth.Remove")
												</th>
											}
										</tr>
									</thead>
									<tbody>
										@foreach (var item in Model.AssociatedExternalAuthRecords)
										{
											<tr>
												<td class="auth-method-name">
													@item.AuthMethodName
												</td>
												<td class="email">
													@item.Email
												</td>
												<td class="external-id">
													@CommonHelper.EnsureMaximumLength(item.ExternalIdentifier, 40, "...")
												</td>
												@if (Model.AllowCustomersToRemoveAssociations)
												{
													<td class="remove">
														<a href="#" onclick="return removeexternalassociation(@item.Id)">@T("Account.AssociatedExternalAuth.Remove")</a>
													</td>
												}
											</tr>
										}
									</tbody>
								</table>
							</div>
						}
						@if (Model.NumberOfExternalAuthenticationProviders > Model.AssociatedExternalAuthRecords.Count)
						{
							//we can add more external records
							var loginUrl = Url.RouteUrl("Login", null, webHelper.CurrentRequestProtocol);
							<div class="form-fields add-more-external-records">
								@T("Account.AssociatedExternalAuth.AddMoreRecords")
								<a href="@loginUrl">@loginUrl</a>
							</div>
						}
					</div>
				}

				@if (Model.GdprConsents.Count > 0)
				{
					<div class="fieldset">
						<div class="title">
							<strong>@T("Account.UserAgreement")</strong>
						</div>
						<div class="form-fields">
							@foreach (var consent in Model.GdprConsents)
							{
								if (consent.IsRequired)
								{
									<script asp-location="Footer">
										$(document).ready(function() {
											$('#save-info-button').on('click', function() {
												if ($('#consent@(consent.Id)').is(':checked')) {
														//do some stuff
														return true;
													} else {
														//just show validation errors, don't post
												   alert('@Html.Raw(JavaScriptEncoder.Default.Encode(consent.RequiredMessage))');
														return false;
													}
												});
										});
									</script>
								}
								<div class="inputs accept-consent">
									<input id="consent@(consent.Id)" type="checkbox" name="consent@(consent.Id)" checked="@consent.Accepted" />
									<label for="consent@(consent.Id)">@consent.Message</label>
								</div>
							}
						</div>
					</div>
				}
				<div class="buttons">
					<input type="submit" id="save-info-button" value="@T("Common.Save")" name="save-info-button" class="button-1 save-customer-info-button" />
				</div>
			</form>
		</div>
	</div>*@
@*////////////*@
@*@using System.Text.Encodings.Web
	@using Nop.Core
	@model CustomerInfoModel
	@inject Nop.Core.IWebHelper webHelper
	@{
		Layout = "_ColumnsOne";

		//title
		Html.AddTitleParts(T("PageTitle.Account").Text);
		//page class
		Html.AppendPageCssClassParts("html-account-page");
		Html.AppendPageCssClassParts("html-customer-info-page");
	}



	@if (Model.CountryEnabled && Model.StateProvinceEnabled)
	{
		<script asp-location="Footer">
			$(document).ready(function () {
				$("#@Html.IdFor(model => model.CountryId)").on('change', function () {
					var selectedItem = $(this).val();
					var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");
					var statesProgress = $("#states-loading-progress");
					statesProgress.show();
					$.ajax({
						cache: false,
						type: "GET",
						url: "@(Url.RouteUrl("GetStatesByCountryId"))",
						data: { "countryId": selectedItem, "addSelectStateItem": "true" },
						success: function (data) {
							ddlStates.html('');
							$.each(data, function (id, option) {
								ddlStates.append($('<option></option>').val(option.id).html(option.name));
							});
							statesProgress.hide();
						},
						error: function (xhr, ajaxOptions, thrownError) {
							alert('Failed to retrieve states.');
							statesProgress.hide();
						}
					});
				});
			});
		</script>
	}
	<nav class="breadcrumb-wrap" aria-label="breadcrumb">
		<ol class="breadcrumb">
			<li class="breadcrumb-item"><a href="#">Bed4you</a></li>
			<li class="breadcrumb-item"><a href="#">@T("account.cabinet")</a></li>
			<li class="breadcrumb-item active">@T("account.info")</li>
		</ol>
	</nav>

	<div class="row cabinet">
		<div class="offset-xl-1 col-xl-8">
			<div class="title-wrap clearfix">
				<h1 class="title float-left">@T("account.cabinet")</h1>
				<button class="btn btn-blue float-right" onclick="window.location.replace('/logout')">@T("account.exit")</button>
			</div>
			<nav class="blue-menu clearfix">
				<ul>
					<li><a class="active" href="/customer/info">Контактная информация</a></li>
					<li><a href="/customer/wishlist">Избранное  <span id="wishlistCount"></span></a></li>
					<li><a href="/order/history">История заказов</a></li>
					<li><a href="/rewardpoints/history">Мои бонусы</a></li>
				</ul>
			</nav>
			<div class="cabinet-info rounded">
				<div class="row login-wrap">
					<form class="col-sm-12" asp-route="CustomerInfo" method="post">
						<div class="title"><span>1</span>Личные данные</div>
						<button type="button" id="edit-name" class="btn btn-link">
							@T("cart.changeinfo")
						</button>
						<button style="display: none;" type="button" id="edit-name-close" class="btn btn-link">
							@T("cart.cancel")
						</button>
						<div class="form-group row">
							<label style="display: none" class="col-form-label col-sm-3" for="FirstName">
								@T("cart.name")
							</label>
							<input style="display: none" id="FirstName" type="text" name="FirstName" class="form-control col-sm-8">
							<div class="col-sm-3">@T("cart.name")</div>
							<div class="col-sm-8 text-light-c">@Model.FirstName</div>
						</div>
						<div class="form-group row">
							<label style="display: none" class="col-form-label col-sm-3" for="Phone">
								@T("cart.phone")
							</label>
							<input style="display: none" id="Phone" name="Phone" type="text" class="form-control col-sm-8">
							<div class="col-sm-3">@T("cart.phone")</div>
							<div class="col-sm-8 text-light-c">@Model.Phone</div>
						</div>
						<div class="form-group row">
							<div class="col-sm-3">E-mail</div>
							<div class="col-sm-8 text-light-c">@Model.Email</div>
						</div>

						<div class="line"></div>

						<div class="title"><span>2</span>@T("cart.address")</div>
						<button type="button" id="edit-addres" class="btn btn-link">@T("cart.changeaddress")</button>
						<button type="button" id="edit-addres-close" style="display: none" class="btn btn-link">@T("cart.cancel")</button>
						<div class="form-group row">
							<label style="display: none" class="col-form-label col-sm-3" for="li1">
								@T("cart.address")
							</label>
							<input style="display: none" id="ai1" type="text" class="form-control col-sm-8">
							<div class="col-sm-3">@T("cart.city")</div>
							<div class="col-sm-8 text-light-c">@Model.City</div>
						</div>
						<div class="form-group row">
							@{
								var attribute = Model.CustomerAttributes.FirstOrDefault(x => x.Id == 2);
								var controlId = $"customer_attribute_{attribute.Id}";
								var textPrompt = attribute.Name;
								<label style="display: none" class="col-form-label col-sm-3" for="li2">@textPrompt</label>
								<input style="display: none" id="ai2" type="text" class="form-control col-sm-8">
								<div class="col-sm-3">@textPrompt</div>
								<div class="col-sm-8 text-light-c">@attribute.DefaultValue</div>
							}
						</div>
						<div class="form-group row">

							@{
								attribute = Model.CustomerAttributes.FirstOrDefault(x => x.Id == 3);
								controlId = $"customer_attribute_{attribute.Id}";
								textPrompt = attribute.Name;
								<label style="display: none" class="col-form-label col-sm-3" for="li3">@textPrompt</label>
								<input style="display: none" id="ai3" type="text" class="form-control col-sm-8">
								<div class="col-sm-3">@textPrompt</div>
								<div class="col-sm-8 text-light-c">@attribute.DefaultValue</div>
							}
						</div>

						<div class="line"></div>

						<div class="title"><span>3</span>@T("cart.pass")</div>
						<button type="button" id="edit-pass" class="btn btn-link">@T("cart.changepass")</button>
						<button type="button" id="edit-pass-close" style="display: none" class="btn btn-link">@T("cart.cancel")</button>
						<div class="form-group row">
							<label style="display: none" class="col-form-label col-sm-3" for="p">@T("cart.newpass")</label>
							<input style="display: none" id="p" type="password" class="form-control col-sm-8">
						</div>
						<input type="submit" id="save-info-button" value="@T("Common.Save")" name="save-info-button" />
					</form>
				</div>
			</div>
		</div>
	</div>

	<script asp-location="Footer">
		function removeexternalassociation(itemId) {
			if (confirm('@T("Common.AreYouSure")')) {
				var postData = {
					id: itemId
				};
				addAntiForgeryToken(postData);
				$.ajax({
					cache: false,
					type: 'POST',
					url: '@Url.Action("RemoveExternalAssociation", "Customer")',
					data: postData,
					dataType: 'json',
					success: function (data) {
						location.href = data.redirect;
					},
					error: function (xhr, ajaxOptions, thrownError) {
						alert('Failed to delete');
					}
				});
			}
			return false;
		}
	</script>
	<script>
		$(document).ready(function () {
			$.ajax({
				url: "/Common/GetWishlistCount",
				type: "POST",
				dataType: 'text',
				traditional: true
			}).done(function (responce) {
				$("#wishlistCount").text("(" + responce + ")");
			});
		});
	</script>*@
@using System.Text.Encodings.Web
@using Nop.Core
@model CustomerInfoModel
@inject Nop.Core.IWebHelper webHelper
@{
	Layout = "_ColumnsOne";

	//title
	Html.AddTitleParts(T("PageTitle.Account").Text);
	//page class
	Html.AppendPageCssClassParts("html-account-page");
	Html.AppendPageCssClassParts("html-customer-info-page");
}

@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
	<script asp-location="Footer">
        $(document).ready(function () {
            $("#@Html.IdFor(model => model.CountryId)").on('change', function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });
	</script>
}
<nav class="breadcrumb-wrap" aria-label="breadcrumb">
	<ol class="breadcrumb">
		<li class="breadcrumb-item"><a href="/">Bed4you</a></li>
		<li class="breadcrumb-item"><a href="/customer/info">@T("account.cabinet")</a></li>
		<li class="breadcrumb-item active"><a href="#">@T("account.info")</a></li>
	</ol>
</nav>
<div class="row cabinet">
	<div class="offset-xl-1 col-xl-8">
		<div class="title-wrap clearfix">
			<h1 class="title float-left">@T("account.cabinet")</h1>
			<button class="btn btn-blue float-right btn-sm" onclick="window.location.replace('/logout')">@T("account.exit")</button>
		</div>
		@await Component.InvokeAsync("AccountMenu", new { active = "/customer/info" })
		<div class="cabinet-info cabinet-info-main rounded">
			<div class="row login-wrap">
				<form asp-route="CustomerInfo" class="col-sm-12" method="post" id="infoForm">
					<div asp-validation-summary="ModelOnly" class="message-error"></div>
					<div id="firstZone">
						<div class="title"><span>1</span>@T("cabinet.info")</div>
						<button type="button"
								id="edit-name"
								class="btn btn-link">
							@T("cart.changeinfo")
						</button>
						<button style="display: none;"
								type="button"
								onclick="CancelChangesInZone(1)"
								id="edit-name-close"
								class="btn btn-link">
							@T("cart.cancel")
						</button>
						<div class="form-group row">
							<label asp-for="FirstName" asp-postfix=":" class="col-form-label col-sm-3">@T("cart.name")</label>
							<input asp-for="FirstName" class="form-control col-sm-8" disabled />
							<nop-required />
							<span asp-validation-for="FirstName"></span>
						</div>
						@if (Model.PhoneEnabled)
						{
							@if (Model.PhoneEnabled)
							{
								<div class="form-group row">
									<label asp-for="Phone" asp-postfix=":" class="col-form-label col-sm-3">@T("cart.phone")</label>
									<input asp-for="Phone" id="cab-phone" class="form-control col-sm-8" disabled />
									@if (Model.PhoneRequired)
									{
										<nop-required />
									}
									<span asp-validation-for="Phone"></span>
								</div>
							}

						}
						<div class="form-group row">
							<label asp-for="Email" asp-postfix=":" class="col-form-label col-sm-3">E-mail</label>
							<input asp-for="Email" class="form-control col-sm-8" disabled />
							<nop-required />
							<span asp-validation-for="Email"></span>
						</div>
						<div class="line"></div>
					</div>
					@if (Model.StreetAddressEnabled ||
Model.StreetAddress2Enabled ||
Model.ZipPostalCodeEnabled ||
Model.CityEnabled ||
Model.CountyEnabled ||
Model.CountryEnabled)
					{
						<div id="secondZone">
							<div class="title"><span>2</span>Адрес</div>
							<button type="button"
									id="edit-addres"
									class="btn btn-link">
								@T("cabinet.changeaddr")
							</button>
							<button type="button"
									id="edit-addres-close"
									style="display: none"
									onclick="CancelChangesInZone(2)"
									class="btn btn-link">
								@T("cart.cancel")
							</button>
							@if (Model.CityEnabled)
							{
                            <div class="form-group row">
                                <label asp-for="City" asp-postfix=":" class="col-form-label col-sm-3">@T("cart.city")</label>
                                <select asp-for="City" class="form-control col-sm-8" disabled>
                                    @await Component.InvokeAsync("RegionsSelectorBlock", new { selectedCity = Model.City, disabled = true })
                                </select>
                                @if (Model.CityRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="City"></span>
                            </div>
							}
							@if (Model.StreetAddressEnabled)
							{
								<div class="form-group row">
									<label asp-for="StreetAddress" asp-postfix=":" class="col-form-label col-sm-3">@T("cart.address")</label>
									<input asp-for="StreetAddress" class="form-control col-sm-8" disabled />
									@if (Model.StreetAddressRequired)
									{
										<nop-required />
									}
									<span asp-validation-for="StreetAddress"></span>
								</div>
							}
							@if (Model.StreetAddress2Enabled)
							{
								<div class="form-group row">
									<label asp-for="StreetAddress2" asp-postfix=":" class="col-form-label col-sm-3">@T("cart.flat")</label>
									<input asp-for="StreetAddress2" class="form-control col-sm-8" disabled />
									@if (Model.StreetAddress2Required)
									{
										<nop-required />
									}
									<span asp-validation-for="StreetAddress2"></span>
								</div>
							}
						</div>
						<div id="thirdZone">
							<div class="title"><span>3</span>Пароль</div>
							<button type="button" id="edit-pass" class="btn btn-link">@T("cabinet.changepass")</button>
							<button type="button"
									id="edit-pass-close"
									style="display: none"
									onclick="CancelChangesInZone(3)"
									class="btn btn-link">
								@T("cabinet.cancel")
							</button>
							<div class="form-group row">
								<input id="p" type="password" class="form-control col-sm-8" value="" disabled>
							</div>
						</div>
					}
					<div class="buttons">
						<input type="submit"
							   id="save-info-button"
							   value="@T("Common.Save")"
							   name="save-info-button"
							   class="button-1 save-customer-info-button" />
					</div>
				</form>
			</div>
		</div>
	</div>
</div>
<script>
	function CancelChangesInZone(index) {
		//if (index == 1) {
		//	$("#firstZone .row").each(function () {
		//		$(this).find('input').val($(this).find('.text-light-c').text());
		//	});
		//}
		//if (index == 2) {
		//	$("#secondZone .row").each(function () {
		//		$(this).find('input').val($(this).find('.text-light-c').text());
		//	});
		//}
		//if (index == 3) {
		//	$("#thirdZone .row").each(function () {
		//		$(this).find('input').val("");
		//	});
		//}
	}
    $("#save-info-button").on("click", function (e) {
        $(".login-wrap form input").each(function () {
            $(this).attr("disabled", false);
        });
		var hasErrors = false;
		$("#firstZone input").each(function () {
			if ($(this).val() == "") {
				$(this).addClass('is-invalid');
				e.preventDefault();
				hasErrors = true;
			}
		});
		if (!hasErrors) {
			if ($("#p").val() != "") {
				$.ajax({
					url: "/Customer/ChangeCustomerPassword",
					type: "POST",
					dataType: 'json',
					traditional: true,
					data: {
						password: $("#p").val()
					}
				}).done(function (responce) {
					console.log(responce);
					if (responce.Success) {
						$("#popup-success").modal("show");
						setTimeout(function () {
							$("#popup-success").modal("hide");
						}, 1000);
						$("#infoForm").submit();
					}
					else {
						$("#popup-descr").text(responce.Errors[0])
						$("#popup-error").modal("show");
						setTimeout(function () {
							$("#popup-error").modal("hide");
						}, 3000);
					}
				});
			}
			else {//if pass is empty - no need to change it
				$("#infoForm").submit();
			}
		}
		e.preventDefault();
	});
</script>
<script asp-location="Footer">
    function removeexternalassociation(itemId) {
        if (confirm('@T("Common.AreYouSure")')) {
            var postData = {
                id: itemId
            };
            addAntiForgeryToken(postData);
            $.ajax({
                cache: false,
                type: 'POST',
                url: '@Url.Action("RemoveExternalAssociation", "Customer")',
                data: postData,
                dataType: 'json',
                success: function (data) {
                    location.href = data.redirect;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to delete');
                }
            });
        }
        return false;
    }
</script>
<div class="modal fade" id="popup-success" tabindex="-1" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content">
			<h5 class="text-center">@T("popup.success")</h5>
		</div>
	</div>
</div>
<div class="modal fade" id="popup-error" tabindex="-1" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content">
			<h5 class="text-center">@T("popup.error")</h5>
			<h4 class="text-center" id="popup-descr"></h4>
		</div>
	</div>
</div>
<script src="~/js/site/maskedinput.js"></script>
<script>
    $("#cab-phone").mask("+38 (999) 999-99-99", { placeholder: "+38 (___) ___-__-__" });
</script>