@*@model ShoppingCartModel
	@{
		Layout = "_ColumnsOne";

		//title
		Html.AddTitleParts(T("PageTitle.ShoppingCart").Text);
		//page class
		Html.AppendPageCssClassParts("html-shopping-cart-page");
	}
	@if (!Model.OnePageCheckoutEnabled)
	{
		@await Component.InvokeAsync("CheckoutProgress", new { step = CheckoutProgressStep.Cart })
	}
	<div class="page shopping-cart-page">
		<div class="page-title">
			<h1>@T("ShoppingCart")</h1>
		</div>
		<div class="page-body">
			@await Component.InvokeAsync("OrderSummary", new { overriddenModel = Model })
		</div>
	</div>*@


@model ShoppingCartModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@inject IWebHelper webHelper
@inject IWorkContext workContext
@inject OrderSettings orderSettings
@{
	Layout = "_ColumnsOne";

	//title
	Html.AddTitleParts(T("PageTitle.ShoppingCart").Text);
	//page class
	Html.AppendPageCssClassParts("html-shopping-cart-page");
}
@if (!Model.OnePageCheckoutEnabled)
{
	@await Component.InvokeAsync("CheckoutProgress", new { step = CheckoutProgressStep.Cart })
}
<nav class="breadcrumb-wrap">
	<ol class="breadcrumb">
		<li class="breadcrumb-item"><a href="/">Bed4you</a></li>
		<li class="breadcrumb-item active"><a href="#">@T("product.cart")</a></li>
	</ol>
</nav>
<div class="cart">
	<div class="cart-wrap">
		<div class="row">
			<div class="col-sm-10 col-md-8 offset-md-1 offset-lg-1 col-lg-7 offset-xl-1 col-xl-6">
				<h1 class="title d-none d-lg-block">@T("ShoppingCart")</h1>
				@await Component.InvokeAsync("OrderSummary", new { overriddenModel = Model })
			</div>
			<div class="order-1 col-md-12 order-lg-2 col-lg-3">
				<div class="order-wrapp rounded">
					<div class="title mb-4">@T("Cart.YourOrder")</div>
					<div id="mainCartItems">
						@foreach (var item in Model.Items)
						{
							<div class="item">
								<img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
								<div class="title">@item.ProductName</div>
								<div class="item-name">@item.ProductSeName</div>
								<div class="count-wrap mt-2 mb-2">
									<button class="minus" onclick="ChangeProductQuantity(@item.ProductId, 1, -1, false)"></button>
									<div class="count">@item.Quantity</div>
									<button class="plus" onclick="ChangeProductQuantity(@item.ProductId, 1, 1, false)"></button>
									<div class="closee" onclick="RemoveFromCart(@item.ProductId, 1, false)"></div>
								</div>
								<div class="price-wrap">
									<div class="price-old">@item.UnitPrice</div>
									<div class="price">@(item.MaximumDiscountedQty.HasValue ? T("ShoppingCart.MaximumDiscountedQty", item.MaximumDiscountedQty.Value).ToString() : item.SubTotal)</div>
								</div>
							</div>
							<div class="line"></div>
						}
					</div>
						<div class="total-wrap mb-3">
							<span>@T("cart.total") <span id="cart-count-full">0</span> @T("cart.total.text")</span>
							<span><span id="cart-price-full">0</span> грн </span>
                            <span>@T("cart.willearn") @Model.WillEarnRewardPoints</span>
						</div>
					<button class="btn btn-link">Использовать промокод</button>
					<button class="btn btn-link">Использовать скидочную карточку</button>
					<small>Стоимость указана без учета доставки</small>
				</div>
			</div>
		</div>
	</div>
</div>
<script>
	function UpdateCart() {
		$(document).ready(function () {
			$("#cartItems").empty();
			$.ajax({
				url: "/ShoppingCart/getcart",
				type: "POST",
				dataType: 'json',
				traditional: true
			}).done(function (responce) {
				var sum = 0.0;
				var count = 0;
				responce.model.Items.forEach(function (product) {
					sum += parseFloat(product.UnitPrice) * product.Quantity;
					count += product.Quantity;
				});
				$("#cart-price-full").text(sum);
				$("#cart-count-full").text(count);
			});
		});
	}
	$(document).ready(UpdateCart());
</script>