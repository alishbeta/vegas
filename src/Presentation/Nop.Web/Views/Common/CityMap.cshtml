@{
	Layout = "_ColumnsOne";
}
@model CityMapModel

<nav class="breadcrumb-wrap" aria-label="breadcrumb">
	<ol class="breadcrumb">
		<li class="breadcrumb-item"><a href="/">Bed4you</a></li>
		<li class="breadcrumb-item active"><a href="#">@Model.Name</a></li>
	</ol>
</nav>

<div class="row map">
	<div class="offset-xl-2 col-xl-8">
		<h1 class="title">Наши салоны</h1>
		@await Component.InvokeAsync("OurStoresMenu", new { active = Model.Name })
		<div class="map-wrap">
			<div id="map"></div>
			<div class="row img-wrap clearfix text-center">
				@{
					var addresses = new List<dynamic>();
				}
				@foreach (var address in Model.Addresses)
				{
				<div class="img col-lg-6">
					<a href="/storeinfo?addressId=@address.Id">
						<img src="https://via.placeholder.com/540x320" alt="">
						<div class="text-wrap">
							<div><b>"Матрасы Vegas"</b></div>
							<div class="address" data-addr="@address.Address1">@address.Address1</div>
							<div>пн-вс 10:00-20:00</div>
						</div>
					</a>
				</div>
					var description = Model.Warehouses.FirstOrDefault(x => x.AddressId == address.Id).AdminComment?.Replace("\n", "").Replace("\r", "");
					var addr = address.Address1?.Replace("\n", "").Replace("\r", "");

					addresses.Add(new
					{
						addr,
						description
					});
				}
				<span id="address" style="display:none!important;" data-address="@Newtonsoft.Json.JsonConvert.SerializeObject(addresses)"></span>
			</div>
		</div>
	</div>
</div>