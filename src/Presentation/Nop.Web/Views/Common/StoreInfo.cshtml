@{
	Layout = "_ColumnsOne";
}
@using Nop.Core.Domain.Common;
@model StoreInfoModel
<nav class="breadcrumb-wrap" aria-label="breadcrumb">
	<ol class="breadcrumb">
		<li class="breadcrumb-item"><a href="/">Bed4you</a></li>
		<li class="breadcrumb-item"><a href="/ourstores">@T("map.ourstores")</a></li>
        <li class="breadcrumb-item active">@Model.WarehouseViewModels.FirstOrDefault(x => x.AddressId == Model.Address.Id)?.Name</li>
	</ol>
</nav>
<div class="row show-room">
    <div class="offset-xl-2 col-xl-8">
        <h1 class="title text-center">@Model.WarehouseViewModels.FirstOrDefault(x => x.AddressId == Model.Address.Id)?.Name</h1>
        <div class="addres text-center">
            <p>@Model.Address?.Address1</p>
            <p>тел. <span>@Model.Address.PhoneNumber</span></p>
            <p>@Model.WarehouseViewModels.FirstOrDefault(x => x.AddressId == Model.Address.Id)?.WorkTime</p>
        </div>
        <div class="show-room-wrap">
            <div class="slider">
                @foreach (var picture in Model.WarehouseViewModels.FirstOrDefault(x => x.AddressId == Model.Address.Id)?.Pictures)
                {
                    <img src="@picture.PictureUrl" alt="">
                }
            </div>
            <div class="slider-nav">
                @foreach (var picture in Model.WarehouseViewModels.FirstOrDefault(x => x.AddressId == Model.Address.Id)?.Pictures)
                {
                    <img src="@picture.PictureUrl" alt="">
                }
            </div>
            <div class="bl-1 rounded clearfix">
                <div class="i-bl-w1">
                    <div class="title"><h4>@T("store.contact")</h4></div>
                    <p>@Model.Address.Address1</p>
                    <p>тел. <span>@Model.Address.PhoneNumber</span></p>
                    <p>@Model.WarehouseViewModels.FirstOrDefault(x => x.AddressId == Model.Address.Id)?.WorkTime</p>
                    <button class="btn btn-blue pl-5 pr-5" data-toggle="modal" data-target="#writUs" onclick="window.location.replace('/contactus')">@T("store.contactus")</button>
                </div>
                <div class="i-bl-w2">
                    <div id="map"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-12">
        <div class="line"></div>
        @await Component.InvokeAsync("StoreProducts", new { addressId = Model.Address.Id })
        <div class="line"></div>
    </div>
    <div class="col-xl-12">
        <div class="title text-center mb-5">
            <h3 class="">@T("ourstores.other") @Model.Address.City</h3>
            <button class="btn btn-sm btn-blue-white float-right d-none d-md-block" onclick="window.location.replace('/ourstores')">@T("Bestsellers.ViewAll")</button>
        </div>
    </div>
    <div class="offset-xl-2 col-xl-8">
        <div class="new-wrap">
            <div class="salon-slider-wrap clearfix">
                @foreach (var address in Model.OtherStores)
                {
                    <a href="/storeinfo?addressId=@address.Id">
                        <div class="img">
                            <img src="@(Model.WarehouseViewModels.FirstOrDefault(x => x.AddressId == address.Id)?.Pictures.FirstOrDefault(x => x.PictureUrl != null).PictureUrl ?? "/img/logo.png")" alt="">
                            <div class="text-wrap">
                                <div><b>@Model.WarehouseViewModels.FirstOrDefault(x => x.AddressId == address.Id)?.Name</b></div>
                                <div>@address.Address1</div>
                                <div>@Model.WarehouseViewModels.FirstOrDefault(x => x.AddressId == address.Id)?.WorkTime</div>
                            </div>
                        </div>
                    </a>
                }
            </div>
        </div>
    </div>
    <div class="col-xl-12">
        <div class="warehouse-description">
            @Html.Raw(Model.WarehouseViewModels.FirstOrDefault(x => x.AddressId == Model.Address.Id)?.WarehouseDescription)
        </div>
    </div>
    </div>
    @{
        var addresses = new List<dynamic>();
        var warehouse = Model.Warehouses.FirstOrDefault(x => x.AddressId == Model.Address.Id);
        addresses.Add(new
        {
            city = Model.Address?.City,
            name = warehouse?.Name,
            addr = Model.Address?.Address1,
            phone = Model.Address?.PhoneNumber,
            workTime = warehouse?.AdminComment,
            zoom = 6
        });
    }
    <span id="address" style="display:none!important;" data-address="@Newtonsoft.Json.JsonConvert.SerializeObject(addresses)"></span>
    <script type="text/javascript" src="/js/slick.min.js"></script>
    <script type="text/javascript">
        $('.slider').slick({
            slidesToShow: 1,
            slidesToScroll: 1,
            fade: true,
            asNavFor: '.slider-nav',
            prevArrow: '<div class="prev-arrow"></div>',
            nextArrow: '<div class="next-arrow"></div>',
        });
        $('.slider-nav').slick({
            slidesToShow: 4,
            slidesToScroll: 1,
            asNavFor: '.slider',
            dots: false,
            centerMode: false,
            focusOnSelect: true,
            arrows: false,
        });
        $('.slider-wrap').slick({
            dots: false,
            slidesToShow: 6,
            slidesToScroll: 1,
            speed: 600,
            useTransform: false,
            prevArrow: '<div class="baner-prev-arrow"></div>',
            nextArrow: '<div class="baner-next-arrow"></div>',
            infinite: false,
        });
        $('.salon-slider-wrap').slick({
            dots: false,
            slidesToShow: 2,
            slidesToScroll: 1,
            speed: 600,
            useTransform: false,
            prevArrow: '<div class="baner-prev-arrow"></div>',
            nextArrow: '<div class="baner-next-arrow"></div>',
            infinite: false,
        });

    </script>
