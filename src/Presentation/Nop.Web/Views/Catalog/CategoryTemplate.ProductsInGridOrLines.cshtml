@model CategoryModel
@using Nop.Core.Domain.Common
@using Nop.Core.Domain.Seo
@inject Nop.Core.IWebHelper webHelper
@inject SeoSettings seoSettings
@inject CommonSettings commonSettings
@{
	Layout = "_ColumnsOne";

	//title
	Html.AddTitleParts(!string.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
	//meta
	Html.AddMetaDescriptionParts(Model.MetaDescription);
	Html.AddMetaKeywordParts(Model.MetaKeywords);
	//page class
	Html.AppendPageCssClassParts("html-category-page");

	if (seoSettings.CanonicalUrlsEnabled)
	{
		var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, webHelper.CurrentRequestProtocol).ToLowerInvariant();
		Html.AddCanonicalUrlParts(categoryUrl, seoSettings.QueryStringInCanonicalUrlsEnabled);
	}

	var breadcrumbDelimiter = commonSettings.BreadcrumbDelimiter;
}
@{
	Layout = "_ColumnsOne";
	ViewData["class"] = "wrap short-menu cat";
}

@*category breadcrumb*@
@section Breadcrumb
	{
	@if (Model.DisplayCategoryBreadcrumb)
	{
		<nav class="breadcrumb-wrap" aria-label="breadcrumb">
			<ol class="breadcrumb" itemscope itemtype="http://schema.org/BreadcrumbList">
				<li class="breadcrumb-item">
					<a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
				</li>
				@{ int position = 1; }
				@foreach (var cat in Model.CategoryBreadcrumb)
				{
					var isLastCategory = cat.Id == Model.Id;
					<li class="breadcrumb-item @(isLastCategory == true ? "active" : "")" itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
						@if (isLastCategory)
						{
							<strong class="current-item" itemprop="name">@cat.Name</strong>
							<span itemprop="item" itemscope itemtype="http://schema.org/Thing">
								<link itemprop="url" href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" />
							</span>
						}
						else
						{
							<a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name" itemprop="item">
								<span itemprop="name">@cat.Name</span>
							</a>
						}
						<meta itemprop="position" content="@position" />
					</li>
					position++;
				}
			</ol>
		</nav>
		@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CategoryDetailsAfterBreadcrumb, additionalData = Model })
	}
}
<div class="cat-content-wrap">
		@await Html.PartialAsync("_FiltersBox", Model)
</div>
@await Component.InvokeAsync("RecentlyViewedProductsBlock", new { productThumbPictureSize = 450, preparePriceModel = true })

<script>
	function submitFilters() {
		var query = "";
		query += "?price=" + $("[name=MinPrice]").val() + "-" + $("[name=MaxPrice]").val();
		$("input.form-check-input:checked").each(function () {
			query += "&specs=" + this.value;
		});
		var que = "&spec=";
		$("#CustomFilters .inner-wrap").each(function () {
			$(this).find(".form-group input").each(function (index) {
				if (index == 0) {
					que += $(this).val() + ",";
				}
				if (index == 1) {
					que += $(this).val() + "-";
				}
				if (index == 2) {
					que += $(this).val() + "|";
				}
			});
			query += que;
			que = "";
		});
		query += "&orderby=" + $("[name=orderby]:checked").val();
		window.location.replace(query);
	}
</script>

<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="~/js/site/tp.js"></script>
<script>
	var prodsOnPageCount = 6;
	$(document).ready(function () {
		if ($("ul.pagination li").last().hasClass("active")) {
			$("#loadMore").addClass("invisible");
		}
	});
	$("#loadMore").on("click", function () {
		var pagesLoaded = parseInt($("#prods div.outer-wrapp").length / prodsOnPageCount);
		var currentPageIndex = parseInt($(".active a.page-link").text());
		var pageIndex = pagesLoaded + currentPageIndex - 1;
		$.ajax({
			url: "/ru/Catalog/GetProducts",
			type: "POST",
			dataType: 'json',
			traditional: true,
			data: {
				categoryId: @Model.Id,
				pageIndex: pageIndex
			},
		}).done(function (responce) {
			responce.model.forEach(function (product) {
				var discount = "";
				if (product.ProductPrice.Discount != 0) {
					discount = '<div class="discount">' + + product.ProductPrice.Discount + '%</div>';
				}
				var oldPrice = "";
				if (product.ProductPrice.OldPrice != null && product.ProductPrice.OldPrice != "" ) {
					oldPrice = '<div class="price-old">' + + product.ProductPrice.OldPrice + '</div>';
				}
				var shortDesc = "";
				if (product.ShortDescription != null) {
					shortDesc = product.ShortDescription;
				}
				var element =
	'<div class="outer-wrapp float-left">' +
		'<div class="item-wrap">' +
			'<a href="' + product.SeName + '?productId=' + product.Id + '">' +
				'<div class="product-img-wrap">' +
				'<img class="product" src="' + product.DefaultPictureModel.ImageUrl + '" alt="' + product.DefaultPictureModel.AlternateText + '">' +
					discount +
				'</div>' +
			'</a>' +
			'<div class="main-prop-wrap text-left">' +
				'<a href="' + product.SeName + '?productId=' + product.Id + '">' +
					'<div class="product-name text-light-c">' + product.Name + '</div>' +
				'</a>' +
				'<div class="product-prop">' + shortDesc + '</div>' +
				'<div class="price-titile">' + '@T("main.product.price")' + '</div>' +
				'<div class="price-wrap clearfix">' +
					oldPrice +
					'<div class="price-new">' + product.ProductPrice.Price + '</div>' +
				'</div>' +
			'</div>' +
		'</div>' +
		'<div class="item-wrap-full">' +
			'<i class="favorite_i float-left"></i>' +
			'<i class="compare_icon float-right"></i>' +
			'<a href="' + product.SeName + '?productId=' + product.Id + '">' +
				'<div class="product-img-wrap">' +
					'<img class="product" src="' + product.DefaultPictureModel.ImageUrl + '" alt="' + product.DefaultPictureModel.AlternateText + '">' +
					discount +
				'</div>' +
			'</a>' +
			'<div class="main-prop-wrap text-left">' +
				'<a href="' + product.SeName + '?productId=' + product.Id + '">' +
				'<div class="product-name text-light-c">' + product.Name + '</div>' +
				'</a>' +
				'<div class="product-prop">' + shortDesc + '</div>' +
				'<div class="price-titile">' + '@T("main.product.price")' + '</div>' +
				'<div class="price-wrap clearfix">' +
					oldPrice +
					'<div class="price-new">' + product.ProductPrice.Price + '</div>' +
				'</div>' +
			'</div>' +
			'<div class="sizes-wrap clearfix">' +
				'<div class="title">Размеры</div>' +
				'<div class="inner-wrap">' +
					'<div class="block float-left">' +
						'<div class="title">Ширина</div>' +
						'<div class="value">' + product.Width + ' см</div>' +
					'</div>' +
					'<div class="block float-left">' +
						'<div class="title">Длина</div>' +
						'<div class="value">' + product.Length + ' см</div>' +
					'</div>' +
					'<div class="block float-left">' +
						'<div class="title">Высота</div>' +
						'<div class="value">' + product.Height + ' см</div>' +
					'</div>' +
				'</div>' +
			'</div>';
				$("#prods").append(element);
				if ((currentPageIndex + pagesLoaded) * prodsOnPageCount >= parseInt("@Model.ProductsCount")) {
					$("#loadMore").addClass("invisible");
				}
			});
		});
	});
</script>
