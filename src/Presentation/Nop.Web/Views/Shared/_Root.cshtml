@{
	Layout = "_Root.Head";
}

@{
	/*
	@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.BodyStartHtmlTagAfter })
	@await Html.PartialAsync("_Notifications")
	@await Html.PartialAsync("_JavaScriptDisabledWarning")
	@await Html.PartialAsync("_OldInternetExplorerWarning")
	<div class="master-wrapper-page">
		@await Component.InvokeAsync("AdminHeaderLinks")
		@await Html.PartialAsync("_Header")
		<script asp-location="Footer">
			AjaxCart.init(false, '.header-links .cart-qty', '.header-links .wishlist-qty', '#flyout-cart');
		</script>
		<div class="header-menu">
			@await Component.InvokeAsync("TopMenu")
		</div>
		<div class="master-wrapper-content">
			@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ContentBefore })

			@if (IsSectionDefined("Breadcrumb"))
			{
				@RenderSection("Breadcrumb")
			}
			<div class="master-column-wrapper">
				@RenderBody()
			</div>
			@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ContentAfter })
		</div>
		@await Component.InvokeAsync("Footer")
	</div>
	@await Component.InvokeAsync("EuCookieLaw")
	@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.BodyEndHtmlTagBefore })
	*/
}
@{
	if (ViewData["class"] == null)
	{
		ViewData["class"] = "wrap short-menu";
	}
}
<div class="back-shadow"></div>
<div class="modal fade" id="arived" tabindex="-1" role="dialog" aria-labelledby="writUsLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content">
			<div class="header">
				<h5 class="modal-title" id="exampleModalLabel">@T("writeus.remind"):</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="body">
				<form action="">
					<div class="form-group">
						<div class="col">
							<input type="text" placeholder="@T("writeus.name")" class="form-control col form-inline">
						</div>
					</div>
					<div class="form-group">
						<div class="col">
							<input type="text" placeholder="@T("writeus.phone")" class="form-control col form-inline">
						</div>
					</div>
					<div class="form-group">
						<div class="col">
							<button class="btn btn-blue float-right">@T("writeus.remind")</button>
						</div>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>
<div class="modal fade" id="oneclickbuy" tabindex="-1" role="dialog" aria-labelledby="buyInOneClick" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content">
			<div class="header">
				<h5 class="modal-title" id="exampleModalLabel">@T("oneclick.title"):</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="body">
				<form action="">
					<div class="form-group">
						<div class="col">
							<input type="text" placeholder="@T("oneclick.name")" class="form-control col form-inline">
						</div>
					</div>
					<div class="form-group">
						<div class="col">
							<input type="text" placeholder="@T("oneclick.phone")" class="form-control col form-inline">
						</div>
					</div>
					<div class="form-group">
						<div class="col">
							<input type="text" placeholder="@T("oneclick.email")" class="form-control col form-inline">
						</div>
					</div>
					<div class="form-group">
						<div class="col">
							<button class="btn btn-blue float-right">@T("oneclick.title")</button>
						</div>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>
<div class="cart-popup-wrap">
	<div class="order-wrapp">
		<div class="title-wrap clearfix">
			<h1>@T("cart.title")</h1>
			<i class="close-i"></i>
			<i class="shopping_bag_icon"></i>
		</div>
		<div id="cartItems">
			@*CART ITEMS FROM AJAX*@
		</div>
		<div id="carttotal">
			<div class="total-wrap mb-3">
				<span>@T("cart.total") <span id="cart-count">0</span> @T("cart.total.text")</span>
				<span><span id="cart-price">0</span> грн</span>
			</div>
			<div class="text-center">
				<button class="btn btn-blue pr-4 pl-4" onclick="window.location.replace('/checkout/confirm')" id="cartcontinue">@T("cart.continue")</button>
				<button class="btn btn-blue-white pr-4 pl-4" data-toggle="modal" data-target="#oneclickbuy">@T("cart.buynow")</button>
			</div>
			<div class="text-center">
				<button id="pop-up-close" class="btn btn-link ">@T("cart.close")</button>
			</div>
		</div>
	</div>
	<div class="line"></div>
	<div class="similar-wrap" id="relatedItems">
		<div id="recently">
			@await Component.InvokeAsync("RecentlyViewedProductsBlock")
		</div>
	</div>
</div>
<div class="login-form-wrap rounded">
	<div class="form-wrap">
		<form asp-route="Login" asp-route-returnurl="/customer/info" id="testform" method="post">
			<div asp-validation-summary="ModelOnly" class="message-error">@T("Account.Login.Unsuccessful")</div>
			<h5>
				@T("login.title") <i class="favorit user_icon"></i>
				<i class="favorit close-i"></i>
			</h5>
			<div class="form-group form-inline">
				<label class="col-sm-3" for="Email" asp-postfix=":"><b>@T("login.email")</b></label>
				<input class="col-sm-8 form-control" id="mail" type="text" name="Email" autofocus="autofocus" />
				<span for="name"></span>
			</div>
			<div class="form-group form-inline">
				<label class="col-sm-3" for="Password" asp-postfix=":"><b>@T("login.pass")</b></label>
				<input class="col-sm-8 form-control" id="pass" type="password" name="Password" />
				<div id="errorMessage" class="offset-sm-3 invalid-feedback">
					@T("login.error")
				</div>
				<span for="Password"></span>
			</div>
			<div>
				<input type="submit" class="btn btn-blue-white btn-block offset-sm-3 col-sm-8" id="test" value="@T("login.continue")" />
				<script>
					$("#test").on("click", function (e) {
						if ($("#mail").val().length == 0) {
							$("#mail").addClass("is-invalid");
						}
						else {
							$("#mail").removeClass("is-invalid");
						}
						if ($("#pass").val().length == 0) {
							$("#pass").addClass("is-invalid");
						}
						else {
							$("#pass").removeClass("is-invalid");
						}
						e.preventDefault();
						if ($("#pass").val().length != 0 && $("#mail").val().length != 0) {
							$.post('/customer/login?returnUrl=/customer/info', $('#testform').serialize()).done(function (responce) {
								console.log(responce);
								if (!responce.success) {
									$("#mail").addClass("is-invalid");
									$("#pass").addClass("is-invalid");
								}
								else {
									window.location.replace(responce.returnUrl);
								}
							});
						}
					});
				</script>
				<a class="btn btn-link btn-block offset-sm-3 col-sm-8" asp-route="PasswordRecovery">@T("login.forgotpass")</a>
				<a class="btn btn-blue btn-block offset-sm-3 col-sm-8" href="/register">@T("login.signup")</a>
			</div>
		</form>
	</div>
</div>
<div class="@ViewData["class"]">
	<div class="r-wrap">
		<div class="top-wraper" style="display: none;">
			<a onclick="return false;" href="#"><span>@T("scroll.top")</span><i class="top"></i></a>
		</div>
		<div class="all-menu-wrap">
			<nav class="side-menu-wrap">
				<div class="side-logo-wrap">
					<div class="logo">
						<div class="d-none d-xl-block">
							@await Component.InvokeAsync("Logo")
						</div>
					</div>
				</div>
				<div class="inner-menu-wrap">
					@await Component.InvokeAsync("SearchBox")
					@await Component.InvokeAsync("TopMenu")
					<div class="mob-lang text-center">
						<span class="d-inline d-sm-inline d-md-none"><a class="select" href="/ru">@T("lang.ru")</a></span>
						<span class="d-inline d-sm-inline d-md-none"><a href="/ua">@T("lang.ua")</a></span>
					</div>
				</div>
			</nav>
			<nav class="side-second-menu-wrap d-none d-lg-block">
				<div class="title"></div>
				<i class="close-i"></i>
				<div class="clearfix"></div>
				<div class="sub-menu"></div>
			</nav>
		</div>
		<div class="content content-main-wrap">
			@await Html.PartialAsync("_Header")
			@if (IsSectionDefined("Breadcrumb"))
			{
				@RenderSection("Breadcrumb")
			}

			<!-- RENDER BODY -->
			@RenderBody()
			<!-- END RENDER BODY -->
			<script>
				function GetCrossSellProducts() {
					$.ajax({
						url: "/ShoppingCart/CrossSellProducts",
						type: "POST",
						dataType: 'json',
						traditional: true
					}).done(function (responce) {
						if (responce.model.length == 0) {
							$("#recently").css("display", "unset");
						}
						else {
							$("#recently").css("display", "none");
							$("#relatedItems").empty();
							responce.model.forEach(function (product) {
								var discount = "";
								if (product.Discount != 0 && product.OldPrice != null) {
									discount = '<div class="discount">' + product.Discount + '%</div>';
								}
								var oldPrice = "";
								if (product.OldPrice != "" && product.OldPrice != null) {
									oldPrice = '<div class="price-old">' + product.OldPrice + '</div>';
								}
								var element =
									'<a href="/' + product.SeName + '?productId=' + product.ProductId + '">' +
									'<div class="item-wrap">' +
									'<div class="product-img-wrap">' +
									'<img class="product" src="' + product.ImageUrl + '" alt="' + product.AlternateText + '">' +
									discount +
									'</div>' +
									'<div class="main-prop-wrap text-left">' +
									'<div class="product-name text-light-c">' + product.Name + '</div>' +
									'<div class="product-prop"></div>' +
									'<div class="price-titile">@T("main.product.price")</div>' +
									'<div class="price-wrap clearfix">' +
									oldPrice +
									'<div class="price-new">' + product.NewPrice + '</div>' +
									'</div>' +
									'</div>' +
									'</div>' +
									'</a>';
								$("#relatedItems").append(element);
							});
						}
					});
				}
			</script>
			<script>
				function UpdateWishlist() {
					$.ajax({
						url: "/ShoppingCart/GetWishlistIds",
						type: "POST",
						dataType: 'json',
						traditional: true
					}).done(function (responce) {
						$(".favorite_i:not(.favorit)").each(function () {
							$(this).removeClass("active");
						});
						responce.wishlist.forEach(function (elem) {
							$("[data-id='" + elem.ProductId + "']").addClass("active");
						});
						$("#wishlistItemsCount").text(responce.wishlist.length);
						$(".favorite_i:not(.favorit)").each(function () {
							$(this).removeClass("load");
						});
					});
				};
				$(document).ready(UpdateWishlist());
			</script>
			<script>
				function UpdateCompareItems() {
					$.ajax({
						url: "/ShoppingCart/GetCompareIds",
						type: "POST",
						dataType: 'json',
						traditional: true
					}).done(function (responce) {
						$(".compare_icon:not(.favorit)").each(function () {
							$(this).removeClass("active");
						});
						responce.compareItems.forEach(function (elem) {
							$("[data-ids='" + elem + "']").addClass("active");
						});
						if (responce.compareItems.length > 0) {
							$("#compareItems").addClass('active');
						}
						else {
							$("#compareItems").removeClass('active');
						}
						$(".compare_icon:not(.favorit)").each(function () {
							$(this).removeClass("load");
						});
					});
				};
				$(document).ready(UpdateCompareItems());
			</script>
			<script>
				function RemoveFromCart(id, cartType, refresh) {
					$.ajax({
						url: "/ShoppingCart/RemoveFromCart",
						type: "POST",
						dataType: 'json',
						traditional: true,
						data: {
							productId: id,
							shoppingCartTypeId: cartType,
							refresh
						}
					}).done(function (responce) {
						if (responce.success) {
							if (cartType == 1) {
								UpdateCart();
							}
							else {
								UpdateWishlist();
							}
							if (responce.refresh) {
								window.location.reload();
							}
						}
					});
				}
			</script>
			<script>
				function ChangeProductQuantity(id, cartType, quantity, refresh) {
					$.ajax({
						url: "/ShoppingCart/ChangeProductQuantity",
						type: "POST",
						dataType: 'json',
						traditional: true,
						data: {
							productId: id,
							shoppingCartTypeId: cartType,
							quantity,
							refresh
						}
					}).done(function (responce) {
						if (responce.success) {
							if (cartType == 1) {
								UpdateCart();
							}
							else {
								UpdateWishlist();
							}
							if (responce.refresh) {
								window.location.reload();
							}
						}
					});
				}
			</script>
			<script>
				function StartLoadingCart() {
					$("#cartItems").addClass("load");
				}
			</script>
			<script>
				function UpdateCart() {
					$("#cartItems").addClass("load");
					$.ajax({
						url: "/ShoppingCart/getcart",
						type: "POST",
						dataType: 'json',
						traditional: true
					}).done(function (responce) {
						GetCrossSellProducts();
						if ($("#mainCartItems").length > 0) {
							$("#mainCartItems").empty();
						}
						
						var sum = 0.0;
						var count = 0;
						var data = "";
						$("#cartItems").empty();
						responce.model.Items.forEach(function (product) {
							var oldPrice = "";
							if (product.OldPrice != null && product.OldPrice != product.UnitPrice && product.OldPrice != "") {
								oldPrice = '<div class="price-old">' + product.OldPrice + '</div>';
							}
							var discount = "";
							if (product.Discount != 0 && product.Discount != null) {
								discount = '<div class="discount">-' + product.Discount + '%</div>';
							}
							var element =
								'<div class="item">' +
								'<img src="' + product.Picture.ImageUrl + '" alt="' + product.Picture.AlternateText + '">' +
								'<div class="title">' + product.ProductName + '</div>' +
								'<div class="item-name">' + product.ProductSeName + '</div>' +
								'<div class="count-wrap mt-2 mb-2">' +
								'<button class="minus" onclick="ChangeProductQuantity(' + product.ProductId + ', 1, -1, false)"></button>' +
								'<div class="count">' + product.Quantity + '</div>' +
								'<input id="it-count1" type="hidden" value="' + product.Quantity + '">' +
								'<button class="plus" onclick="ChangeProductQuantity(' + product.ProductId + ', 1, 1, false)"></button>' +
								'<div class="closee" onclick="RemoveFromCart(' + product.ProductId + ', 1, false)"></div>' +
								'</div>' +
								'<div class="price-wrap">' +
								oldPrice +
								'<div class="price">' + product.UnitPrice + '</div>' +
								discount +
								'</div>' +
								'</div>' +
								'<div class="line"></div>';
							data = data + element;
							if ($("#mainCartItems").length > 0) {
								$("#mainCartItems").append(element);
							}
							sum += parseFloat(product.UnitPrice) * product.Quantity;
							count += product.Quantity;
						});
						$("#cart-price").text(sum);
						$("#cart-count").text(count);
						if ($("#mainCartItems").length > 0) {
							$("#cart-price-full").text(sum);
							$("#cart-count-full").text(count);
						}
						if (sum > 0 && count > 0) {
							$("#carttotal").css("display", "block");
							$("#cartcontinue").prop("disabled", false);
						}
						else {
							$("#cartcontinue").prop("disabled", true);
							$("#carttotal").css("display", "none");
							$("#cartItems").append("<h3>@T("cart.empty")</h3>");
						}
						$("#cartItems").append(data);
						$("#cartItems").removeClass("load");
					});
				}
				$(document).ready(GetCrossSellProducts());
			</script>
		</div>
		@await Component.InvokeAsync("Footer")
	</div>
</div>
