@model ShoppingCartModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@inject IWebHelper webHelper
@inject IWorkContext workContext
@inject OrderSettings orderSettings
@*<div class="order-summary-content">
		@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderSummaryContentBefore })
		@await Html.PartialAsync("_OrderReviewData", Model.OrderReviewData)
		@if (Model.Items.Count > 0)
		{
			if (Model.Warnings.Count > 0)
			{
				<div class="message-error">
					<ul>
						@foreach (var warning in Model.Warnings)
						{
							<li>@warning</li>
						}
					</ul>
				</div>
			}
			<form asp-route="ShoppingCart" method="post" enctype="multipart/form-data" id="shopping-cart-form">
				<div class="table-wrapper">
					<table class="cart">
						<colgroup>
							@if (Model.IsEditable)
							{
								<col width="1" />
							}
							@if (Model.ShowSku)
							{
								<col width="1" />
							}
							@if (Model.ShowProductImages)
							{
								<col width="1" />
							}
							<col />
							@if (Model.ShowVendorName)
							{
								<col width="1" />
							}
							<col width="1" />
							<col width="1" />
							<col width="1" />
						</colgroup>
						<thead>
							<tr>
								@if (Model.IsEditable)
								{
									<th class="remove-from-cart">
										@T("ShoppingCart.Remove")
									</th>
								}
								@if (Model.ShowSku)
								{
									<th class="sku">
										@T("ShoppingCart.SKU")
									</th>
								}
								@if (Model.ShowProductImages)
								{
									<th class="product-picture">
										@T("ShoppingCart.Image")
									</th>
								}
								<th class="product">
									@T("ShoppingCart.Product(s)")
								</th>
								@if (Model.ShowVendorName)
								{
									<th class="vendor">
										@T("ShoppingCart.VendorName")
									</th>
								}
								<th class="unit-price">
									@T("ShoppingCart.UnitPrice")
								</th>
								<th class="quantity">
									@T("ShoppingCart.Quantity")
								</th>
								<th class="subtotal">
									@T("ShoppingCart.ItemTotal")
								</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var item in Model.Items)
							{
								<tr>
									@if (Model.IsEditable)
									{
										<td class="remove-from-cart">
											@if (item.DisableRemoval)
											{
												<text>&nbsp;</text>
											}
											else
											{
												<label class="td-title" for="removefromcart@(item.Id)">@T("ShoppingCart.Remove"):</label>
												<input type="checkbox" name="removefromcart" id="removefromcart@(item.Id)" value="@(item.Id)"/>
											}
										</td>
									}
									@if (Model.ShowSku)
									{
										<td class="sku">
											<label class="td-title">@T("ShoppingCart.SKU"):</label>
											<span class="sku-number">@item.Sku</span>
										</td>
									}
									@if (Model.ShowProductImages)
									{
										<td class="product-picture">
											<a href="@Url.RouteUrl("Product", new {SeName = item.ProductSeName})"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>
										</td>
									}
									<td class="product">
										<a href="@Url.RouteUrl("Product", new {SeName = item.ProductSeName})" class="product-name">@item.ProductName</a>
										@if (!string.IsNullOrEmpty(item.AttributeInfo))
										{
											<div class="attributes">
												@Html.Raw(item.AttributeInfo)
											</div>
										}
										@if (!string.IsNullOrEmpty(item.RecurringInfo))
										{
											<div class="recurring-info">
												@Html.Raw(item.RecurringInfo)
											</div>
										}
										@if (!string.IsNullOrEmpty(item.RentalInfo))
										{
											<div class="rental-info">
												@Html.Raw(item.RentalInfo)
											</div>
										}
										@if (Model.IsEditable && item.AllowItemEditing)
										{
											var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName }, webHelper.CurrentRequestProtocol);
											editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid", item.Id.ToString());
											<div class="edit-item">
												<a href="@editCartItemUrl">@T("Common.Edit")</a>
											</div>
										}
										@if (item.Warnings.Count > 0)
										{
											<div class="message-error">
												<ul>
													@foreach (var warning in item.Warnings)
													{
														<li>@Html.Raw(warning)</li>
													}
												</ul>
											</div>
										}
									</td>
									@if (Model.ShowVendorName)
									{
										<td class="vendor">
											<label class="td-title">@T("ShoppingCart.VendorName"):</label>
											<span class="vendor-name">@item.VendorName</span>
										</td>
									}
									<td class="unit-price">
										<label class="td-title">@T("ShoppingCart.UnitPrice"):</label>
										<span class="product-unit-price">@item.UnitPrice</span>
									</td>
									<td class="quantity">
										<label class="td-title" for="itemquantity@(item.Id)">@T("ShoppingCart.Quantity"):</label>
										@if (Model.IsEditable)
										{
											if (item.AllowedQuantities.Count > 0)
											{
												<select name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" class="qty-dropdown">
													@foreach (var qty in item.AllowedQuantities)
													{
														<option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
													}
												</select>
											}
											else
											{
												<input name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="qty-input"/>
											}
										}
										else
										{
											<span class="product-quantity">@item.Quantity</span>
										}
									</td>
									<td class="subtotal">
										<label class="td-title">@T("ShoppingCart.ItemTotal"):</label>
										<span class="product-subtotal">@item.SubTotal</span>
										@if (!string.IsNullOrEmpty(item.Discount))
										{
											<div class="discount">
												@T("ShoppingCart.ItemYouSave", item.Discount)
											</div>
											if (item.MaximumDiscountedQty.HasValue)
											{
												<div class="discount-additional-info">
													@T("ShoppingCart.MaximumDiscountedQty", item.MaximumDiscountedQty.Value)
												</div>
											}
										}
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
				@if (Model.IsEditable && Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
				{
					var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
					//tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
					//of course, you can modify appropriate locales to include VAT info there
					<div class="tax-shipping-info">
						@T(inclTax ? "ShoppingCart.TaxShipping.InclTax" : "ShoppingCart.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
					</div>
				}
				<div class="cart-options">
					@if (Model.IsEditable)
					{
						<div class="common-buttons">
							<input type="submit" name="updatecart" value="@T("ShoppingCart.UpdateCart")" class="button-2 update-cart-button" />
							<input type="submit" name="continueshopping" value="@T("ShoppingCart.ContinueShopping")" class="button-2 continue-shopping-button" />
						</div>
					}
					@if (Model.IsEditable)
					{
						@await Html.PartialAsync("_CheckoutAttributes", Model)
					}
					@await Component.InvokeAsync("SelectedCheckoutAttributes")
				</div>
				<div class="cart-footer">
					@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderSummaryCartFooter })
					@if (Model.IsEditable)
					{
						<div class="cart-collaterals">
							<div class="deals">
								@await Html.PartialAsync("_DiscountBox", Model.DiscountBox)
								@await Html.PartialAsync("_GiftCardBox", Model.GiftCardBox)
								@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderSummaryContentDeals })
							</div>
							@await Component.InvokeAsync("EstimateShipping")
						</div>
					}
					<div class="totals">
						@await Component.InvokeAsync("OrderTotals", new { isEditable = Model.IsEditable })
						@if (Model.IsEditable)
						{
							if (!string.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
							{
								<div class="min-amount-warning">
									@Model.MinOrderSubtotalWarning
								</div>
							}
						}
						@if (Model.IsEditable)
						{
							if (Model.TermsOfServiceOnShoppingCartPage)
							{
								<div id="terms-of-service-warning-box" title="@T("Checkout.TermsOfService")" style="display: none;">
									<p>@T("Checkout.TermsOfService.PleaseAccept")</p>
								</div>
								<div class="terms-of-service">
									<input id="termsofservice" type="checkbox" name="termsofservice" />
									<label for="termsofservice">@T("Checkout.TermsOfService.IAccept")</label>
									@if (Model.TermsOfServicePopup)
									{
										<a class="read" id="read-terms">@T("Checkout.TermsOfService.Read")</a>
										<script asp-location="Footer">
											$(document).ready(function() {
												$('#read-terms').on('click',
													function(e) {
														e.preventDefault();
														displayPopupContentFromUrl(
															'@Url.RouteUrl("TopicPopup", new {SystemName = "conditionsofuse"})',
															'@T("Checkout.TermsOfService")');
													});
											});
										</script>
									}
									else
									{
										<a class="read" id="read-terms" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("conditionsofuse") })">@T("Checkout.TermsOfService.Read")</a>
									}
								</div>
							}
							<div class="checkout-buttons">
								@if (string.IsNullOrEmpty(Model.MinOrderSubtotalWarning) && !Model.HideCheckoutButton)
								{
									<script asp-location="Footer">
										$(document).ready(function () {
											$('#checkout').on('click', function () {
												//terms of service
												var termOfServiceOk = true;
												if ($('#termsofservice').length > 0) {
													//terms of service element exists
													if (!$('#termsofservice').is(':checked')) {
														$("#terms-of-service-warning-box").dialog();
														termOfServiceOk = false;
													} else {
														termOfServiceOk = true;
													}
												}
												return termOfServiceOk;
											});
										});
									</script>
									if (orderSettings.CheckoutDisabled)
									{
										<div class="checkout-disabled">
											@T("Checkout.Disabled")
										</div>
									}
									else
									{
										<button type="submit" id="checkout" name="checkout" value="checkout" class="button-1 checkout-button">
											@T("Checkout.Button")
										</button>
									}
								}
							</div>
							<div class="addon-buttons">
								@foreach (var pm in Model.ButtonPaymentMethodViewComponentNames)
								{
									@await Component.InvokeAsync(pm)
								}
							</div>
						}
					</div>
				</div>
				@if (Model.IsEditable)
				{
					@await Component.InvokeAsync("CrossSellProducts")
				}
			</form>
		}
		else
		{
			<div class="no-data">
				@T("ShoppingCart.CartIsEmpty")
			</div>
		}
		@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderSummaryContentAfter })
	</div>*@
<article class="tabbed-content">
	<nav class="tabs">
		<ul>
			<li>
				<a href="#tab1" class="@(!string.IsNullOrEmpty(ViewBag.IsAuthenticated) ? "" : "active")">@T("Cart.NewClient")</a>
			</li>
			<li><a href="#tab2" class="@(string.IsNullOrEmpty(ViewBag.IsAuthenticated) ? "" : "active")">@T("cart.oldclient")</a></li>
		</ul>
	</nav>
	<section id="tab1" class="item @(!string.IsNullOrEmpty(ViewBag.IsAuthenticated) ? "" : "active")" data-title="@T("Cart.NewClient")">
		<div class="item-content">
			<form asp-route="CheckoutConfirm" method="post">
				<div class="title"><span>1</span>@T("Cart.FillInfo")</div>
				<div class="form-group row">
					<label class="col-form-label col-sm-3" for="i1">@T("Cart.Name")</label>
					<input id="i1" type="text" name="Name" class="form-control col-sm-8">
				</div>
				<div class="form-group row">
					<label class="col-form-label col-sm-3" for="i2">@T("Cart.Phone")</label>
					<input id="i2" type="text" name="Phone" class="form-control col-sm-8">
				</div>
				<div class="form-group row">
					<label class="col-form-label col-sm-3" for="i3">@T("Cart.Email")</label>
					<input id="i3" type="text" name="Email" class="form-control col-sm-8">
				</div>

				<div class="line"></div>

				<div class="title"><span>2</span>@T("Cart.DeliveryType")</div>
				<div class="form-inline form-group row">
					<div class="form-check form-check-inline">
						<input class="form-check-input" value="1" name="DeliveryType" type="radio" id="r1" checked>
						<label for="r1"></label>
						<label class="col-form-label" for="r1">@T("cart.delivery.store")</label>
					</div>
					<div class="form-check  form-check-inline">
						<input class="form-check-input" value="2" name="DeliveryType" type="radio" id="r2">
						<label for="r2"></label>
						<label class="col-form-label" for="r2">@T("cart.delivery.default")</label>
					</div>
					<div class="form-check  form-check-inline">
						<input class="form-check-input" value="3" name="DeliveryType" type="radio" id="r3">
						<label for="r3"></label>
						<label class="col-form-label" for="r3">@T("cart.delivery.novaposhta")</label>
					</div>
				</div>
				<div class="form-group row">
					<label class="col-form-label col-sm-3">@T("Cart.City")</label>
					<input type="text" name="City" class="form-control col-sm-8">
				</div>
				<div class="form-group row">
					<label class="col-form-label col-sm-3">@T("admin.orders.address.address1")</label>
					<input type="text" name="StreetAddress1" class="form-control col-sm-8">
				</div>
				<div class="form-group row">
					<label class="col-form-label col-sm-3">@T("admin.orders.address.address2")</label>
					<input type="text" name="StreetAddress2" class="form-control col-sm-2">
				</div>

				<div class="line"></div>

				<div class="title"><span>3</span>@T("Cart.Payment")</div>
				<div class="form-inline row">
					<div class="form-check form-check-inline">
						<input class="form-check-input" value="1" name="PaymentType" type="radio" id="r4" checked>
						<label for="r4"></label>
						<label class="col-form-label" for="r4">@T("cart.payment.cash")</label>
					</div>
					<div class="form-check  form-check-inline">
						<input class="form-check-input" value="2" name="PaymentType" type="radio" id="r5">
						<label for="r5"></label>
						<label class="col-form-label" for="r5">@T("cart.payment.card")</label>
					</div>
				</div>
				<div class="form-inline row">
					<input class="form-check-inline bonus" name="PayByBonuses" type="checkbox">
					<label class="col-form-label" for="r6">@T("Cart.PayByBonus")</label>
					<button class="btn btn-link">@T("Cart.MoreInfo")</button>
				</div>

				<div class="line"></div>

				<div class="title">@T("Cart.Comment")</div>
				<div class="form-group row text-left">
					<textarea class="form-control col-sm-8" name="Comment" rows="4"></textarea>
				</div>
				<div class="row">
					<button type="submit" id="checkout-new" name="checkout" value="checkout" class="btn btn-blue pl-5 pr-5">
						@T("Cart.Confirm")
					</button>
				</div>
			</form>
		</div>
	</section>
	<section id="tab2" class="item @(string.IsNullOrEmpty(ViewBag.IsAuthenticated) ? "" : "active")" data-title="@T("cart.oldclient")">
		<div class="item-content">
			@if (string.IsNullOrEmpty(ViewBag.IsAuthenticated))
			{
			<div class="row sign-up-wrap">
				<div class="col-xl-10">
					<div class="text">
						@T("cart.text.part1") <b>
							"@T("cart.NewClient")"
						</b>@T("cart.text.part2")
					</div>

					<form asp-route="Login" asp-route-returnurl="/checkout/confirm" id="loginform" class="mt-4" method="post">
						<div asp-validation-summary="ModelOnly" class="message-error">@T("Account.Login.Unsuccessful")</div>
						<div class="form-group row">
							<label class="col-sm-3" for="Email" asp-postfix=":"><b>@T("login.email")</b></label>
							<input class="col-sm-8 form-control" id="loginEmail" type="text" name="Email" autofocus="autofocus" />
						</div>
						<div class="form-group row">
							<label class="col-sm-3" for="Password" asp-postfix=":"><b>@T("login.pass")</b></label>
							<input class="col-sm-8 form-control" id="loginPass" type="password" name="Password" />
							<div id="errorMessage" class="offset-sm-3 invalid-feedback">
								@T("login.error")
							</div>
						</div>
						<div class="row">
							<input type="submit" class="offset-sm-3 col-sm-6 text-center" id="loginSubmit" value="@T("login.continue")" />
							<script>
								$("#loginSubmit").on("click", function (e) {
									if ($("#loginEmail").val().length == 0) {
										$("#loginEmail").addClass("is-invalid");
									}
									else {
										$("#loginEmail").removeClass("is-invalid");
									}
									if ($("#loginPass").val().length == 0) {
										$("#loginPass").addClass("is-invalid");
									}
									else {
										$("#loginPass").removeClass("is-invalid");
									}
									e.preventDefault();
									if ($("#loginPass").val().length != 0 && $("#loginEmail").val().length != 0) {
										$.post('/customer/login?returnUrl=/checkout/confirm', $('#loginform').serialize()).done(function (responce) {
											console.log(responce);
											if (!responce.success) {
												$("#loginEmail").addClass("is-invalid");
												$("#loginPass").addClass("is-invalid");
											}
											else {
												window.location.replace(responce.returnUrl);
											}
										});
									}
								});
							</script>
							<a class="btn btn-link" asp-route="PasswordRecovery">@T("login.forgotpass")</a>
						</div>
					</form>
				</div>
			</div>
			}
			else
			{
			<div class="row login-wrap">
				<form asp-route="CheckoutConfirm" method="post">
					<div id="firstZone">
						<div class="title"><span>1</span>@T("cart.personalinfo")</div>
						<button type="button" id="edit-name" class="btn btn-link">
							@T("cart.changeinfo")
						</button>
						<button style="display: none;" onclick="CancelChangesInZone(1)" type="button" id="edit-name-close" class="btn btn-link">
							@T("cart.cancel")
						</button>

						<div class="form-group row">
							<label style="display: none" class="col-form-label col-sm-3" for="li1">
								@T("cart.name")
							</label>
							<input id="li1" style="display: none" type="text" name="Name" class="form-control col-sm-8" value="@Model.CustomerInfo.FirstName">
							<div class="col-sm-4">@T("cart.name")</div>
							<div class="col-sm-8 text-light-c">@Model.CustomerInfo.FirstName</div>
						</div>
						<div class="form-group row">
							<label style="display: none" class="col-form-label col-sm-3" for="li2">
								@T("cart.phone")
							</label>
							<input style="display: none" id="li2" type="text" name="Phone" class="form-control col-sm-8" value="@Model.CustomerInfo.Phone">
							<div class="col-sm-4">@T("cart.phone")</div>
							<div class="col-sm-8 text-light-c">@Model.CustomerInfo.Phone</div>
						</div>
						<div class="form-group row">
							<label style="display: none" class="col-form-label col-sm-3" for="li1">E-mail</label>
							<input id="li3" type="text" style="display: none" name="Email" class="form-control col-sm-8" value="@Model.CustomerInfo.Email">
							<div class="col-sm-4">E-mail</div>
							<div class="col-sm-8 text-light-c">@Model.CustomerInfo.Email</div>
						</div>
					</div>

					<div class="line"></div>

					<div class="title"><span>2</span>@T("cart.delivery")</div>
					<div class="form-inline row">
						<div class="form-check form-check-inline">
							<input class="form-check-input"
								   value="1"
								   name="DeliveryType"
								   type="radio"
								   id="lr1" checked>
							<label for="lr1"></label>
							<label class="col-form-label" for="lr1">@T("cart.delivery.store")</label>
						</div>
						<div class="form-check  form-check-inline">
							<input class="form-check-input"
								   value="2"
								   name="DeliveryType"
								   type="radio"
								   id="lr2">
							<label for="lr2"></label>
							<label class="col-form-label" for="lr2">
								@T("cart.delivery.default")
							</label>
						</div>
						<div class="form-check  form-check-inline">
							<input class="form-check-input"
								   value="3"
								   name="DeliveryType"
								   type="radio"
								   id="lr3">
							<label for="lr3"></label>
							<label class="col-form-label" for="lr3">@T("cart.delivery.novaposhta")</label>
						</div>
					</div>

					<div class="line"></div>

					<div id="secondZone">
						<div class="title"><span>3</span>@T("cart.delivery")</div>
						<button type="button" id="edit-addres" class="btn btn-link">
							@T("cart.changeaddr")
						</button>
						<button type="button" id="edit-addres-close" onclick="CancelChangesInZone(2)" style="display: none" class="btn btn-link">
							@T("cart.cancel")
						</button>

						<div class="form-group row">
							<label style="display: none" class="col-form-label col-sm-3" for="li1">
								@T("cart.city")
							</label>
							<input type="text"
								   style="display: none"
								   id="ai1"
								   name="City"
								   class="form-control col-sm-8"
								   @Model.CustomerInfo.City>
							<div class="col-sm-4">@T("cart.city")</div>
							<div class="col-sm-8 text-light-c">@Model.CustomerInfo.City</div>
						</div>
						<div class="form-group row">
							<label style="display: none" class="col-form-label col-sm-3" for="li2">
								@T("cart.address")
							</label>
							<input style="display: none"
								   id="ai2"
								   type="text"
								   name="StreetAddress1"
								   class="form-control col-sm-8"
								   value="@Model.CustomerInfo.StreetAddress">
							<div class="col-sm-4">@T("cart.address")</div>
							<div class="col-sm-8 text-light-c">@Model.CustomerInfo.StreetAddress</div>
						</div>
						<div class="form-group row">
							<label style="display: none" class="col-form-label col-sm-3" for="li2">
								@T("cart.flat")
							</label>
							<input style="display: none"
								   id="ai2"
								   type="text"
								   name="StreetAddress2"
								   class="form-control col-sm-8"
								   value="@Model.CustomerInfo.StreetAddress2">
							<div class="col-sm-4">@T("cart.flat")</div>
							<div class="col-sm-8 text-light-c">@Model.CustomerInfo.StreetAddress2</div>
						</div>
					</div>

					<div class="line"></div>

					<div class="title"><span>4</span>@T("cart.payment")</div>
					<div class="form-inline row">
						<div class="form-check form-check-inline">
							<input class="form-check-input" value="1" name="PaymentType" type="radio" id="lr4" checked>
							<label for="lr4"></label>
							<label class="col-form-label" for="lr4">
								@T("cart.payment.cash")
							</label>
						</div>
						<div class="form-check  form-check-inline">
							<input class="form-check-input" value="2" name="PaymentType" type="radio" id="lr5">
							<label for="lr5"></label>
							<label class="col-form-label" for="lr5">@T("cart.payment.card")</label>
						</div>
					</div>
					<div class="form-inline row">
						<input class="form-check-inline bonus" name="PayByBonuses" type="checkbox">
						<label class="col-form-label" for="r6">@T("cart.paybybonus")</label>
						<button class="btn btn-link">@T("cart.moreinfo")</button>
					</div>

					<div class="line"></div>

					<div class="title">@T("cart.comment")</div>
					<div class="form-group row text-left">
						<textarea class="form-control col-sm-8" name="Comment" rows="4"></textarea>
					</div>
					<div class="row">
						<button type="submit" id="checkout-old" name="checkout" value="checkout" class="btn btn-blue pl-5 pr-5">
							@T("Cart.Confirm")
						</button>
					</div>
				</form>
			</div>
			}
		</div>
	</section>
</article>
<script>
	function CancelChangesInZone(index) {
		if (index == 1) {
			$("#firstZone .row").each(function () {
				$(this).find('input').val($(this).find('.text-light-c').text());
			});
		}
		if (index == 2) {
			$("#secondZone .row").each(function () {
				$(this).find('input').val($(this).find('.text-light-c').text());
			});
		}
	}
	$("#checkout-old").on("click", function (e) {
		if ($("#li1").val().length == 0) {
			$("#li1").addClass("is-invalid");
			e.preventDefault();
		}
		else {
			$("#li1").removeClass("is-invalid");
		}
		if ($("#li2").val().length == 0) {
			$("#li2").addClass("is-invalid");
			e.preventDefault();
		}
		else {
			$("#li2").removeClass("is-invalid");
		}
		e.pr
		if ($("#li3").val().length == 0) {
			$("#li3").addClass("is-invalid");
			e.preventDefault();
		}
		else {
			$("#li3").removeClass("is-invalid");
		}
	});
	$("#checkout-new").on("click", function (e) {
		if ($("#i1").val().length == 0) {
			$("#i1").addClass("is-invalid");
			e.preventDefault();
		}
		else {
			$("#i1").removeClass("is-invalid");
		}
		if ($("#i2").val().length == 0) {
			$("#i2").addClass("is-invalid");
			e.preventDefault();
		}
		else {
			$("#i2").removeClass("is-invalid");
		}
		e.pr
		if ($("#i3").val().length == 0) {
			$("#i3").addClass("is-invalid");
			e.preventDefault();
		}
		else {
			$("#i3").removeClass("is-invalid");
		}
	});
</script>
