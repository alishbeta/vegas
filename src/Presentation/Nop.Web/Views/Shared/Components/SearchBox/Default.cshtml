@model SearchBoxModel
@using System.Text.Encodings.Web
<form asp-route="ProductSearch" class="search-wrap" method="get" id="small-search-box-form">
	<img class="side-icons-search" src="/img/search_icon.svg" alt="search_icon">
	<input type="text" class="d-md-none d-xl-inline" id="small-searchterms" autocomplete="off" name="q" placeholder="@T("Search.SearchBox.Tooltip")" aria-label="@T("Search.SearchBox.Text.Label")" />
    <div class="ui-widget" style="display:none;margin-top:2em; font-family:Arial"></div>
    <style>
        .ui-autocomplete {
            z-index: 10000;
            display: block!important;
        }
    </style>
    @if (Model.SearchTermMinimumLength > 0)
    {
        <script>
            $("#small-search-box-form").on("submit", function(event) {
                if ($("#small-searchterms").val() == "") {
                    alert('@Html.Raw(JavaScriptEncoder.Default.Encode(T("Search.EnterSearchTerms").Text))');
                    $("#small-searchterms").focus();
                    event.preventDefault();
                }
            });
        </script>
    }
    @if (Model.AutoCompleteEnabled)
    {
        <script>
            $(document).ready(function() {
                var showLinkToResultSearch;
                var searchText;
                console.log("autocomplete");
                $('#small-searchterms').autocomplete({
                    delay: 500,
                    minLength: @(Model.SearchTermMinimumLength.ToString()),
                    source: '@(Url.RouteUrl("ProductSearchAutoComplete"))',
                    appendTo: '.search-box',
                    select: function (event, ui) {
                        $("#small-searchterms").val(ui.item.label);
                        setLocation(ui.item.producturl);
                        return false;
                    },
                    //append link to the end of list
                    open: function (event, ui) {
                        //display link to search page
                        if (showLinkToResultSearch) {
                            searchText = document.getElementById("small-searchterms").value;
                            $("#ui-id-1.ui-autocomplete").append("<li class=\"ui-menu-item\" role=\"presentation\"><a class='btn btn-block btn-blue mt-3' href=\"/search?q=" + searchText + "\">@T("Search.SearchBox.SearchPageLink")</a></li>");
                        }
                    }
                })
                    .data("ui-autocomplete")._renderItem = function (ul, item) {
                    var t = item.label;
                    showLinkToResultSearch = item.showlinktoresultsearch;
                    //html encode
                    t = htmlEncode(t);
                    return $("<li class='search-item'></li>")
                        .data("item.autocomplete", item)
                        .append("<div class='clearfix'>@Html.Raw("<div class='img-wrapp'><img src='\" + item.productpictureurl + \"'></div>")<div class='name'>" + t + "</div></div>")
                        .appendTo(ul);
                };
            });
        </script>
    }
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.SearchBox })
</form>