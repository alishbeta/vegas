@model FilterRangesModel
<div class="filters-data">
    <div class="inner-wrap f-slider" data-filter-number="price" data-min="@(Math.Round(Model.Price?.min ?? 0))" data-max="@(Math.Round(Model.Price?.max ?? 0) + 1)">
        <div class="title">@T("filters.price")</div>
        <div class="form-inline">
            <div class="form-group">
                <span>@T("filters.from"): </span>
                <input class="form-control" name="MinPrice" type="text" id="slider-price-a1">
                <span>@T("filters.to"): </span>
                <input class="form-control" name="MaxPrice" type="text" id="slider-price-a2">
            </div>
        </div>
        <div id="slider-price-r" class="slider-range"></div>
    </div>
    @if ((bool)ViewBag.HasHeight)
    {
        <div class="main-title">
            <h5>@T("filter.dimensions")</h5>
        </div>
        <div class="inner-wrap f-slider" data-filter-number="height" data-min="@(Math.Round(Model.Height?.min ?? 0))" data-max="@(Math.Round(Model.Height?.max ?? 0) + 1)" style="border-bottom: none;">
            <div class="title">@T("filters.height")</div>
            <div class="form-inline">
                <div class="form-group">
                    <span>@T("filters.from"): </span>
                    <input class="form-control" name="MinHeight" type="text" id="slider-height-a1">
                    <span>@T("filters.to"): </span>
                    <input class="form-control" name="MaxHeight" type="text" id="slider-height-a2">
                </div>
            </div>
            <div id="slider-height-r" class="slider-range"></div>
        </div>
    }
    else
    {
    <div class="main-title">
        <h5>@T("filter.sizes")</h5>
    </div>
    }
    <div class="inner-wrap f-slider" data-filter-number="width" data-min="@(Math.Round(Model.Width?.min ?? 0) )" data-max="@(Math.Round(Model.Width?.max ?? 0) + 1)" style="border-bottom: none;">
        <div class="title">@T("filters.width")</div>
        <div class="form-inline">
            <div class="form-group">
                <span>@T("filters.from"): </span>
                <input class="form-control" name="MinWidth" type="text" id="slider-width-a1">
                <span>@T("filters.to"): </span>
                <input class="form-control" name="MaxWidth" type="text" id="slider-width-a2">
            </div>
        </div>
        <div id="slider-width-r" class="slider-range"></div>
    </div>
    <div class="inner-wrap f-slider" data-filter-number="length" data-min="@(Math.Round(Model.Length?.min ?? 0))" data-max="@(Math.Round(Model.Length?.max ?? 0) + 1)">
        <div class="title">@T("filters.length")</div>
        <div class="form-inline">
            <div class="form-group">
                <span>@T("filters.from"): </span>
                <input class="form-control" name="MinLength" type="text" id="slider-length-a1">
                <span>@T("filters.to"): </span>
                <input class="form-control" name="MaxLength" type="text" id="slider-length-a2">
            </div>
        </div>
        <div id="slider-length-r" class="slider-range"></div>
    </div>
    @if ((bool)ViewBag.HasSleepSizes)
    {
        <div class="main-title">
            @T("filter.sleepsizes")
        </div>
        <div class="inner-wrap f-slider" data-filter-number="sleeplength" data-min="@(Math.Round(Model.SleepLength?.min ?? 0))" data-max="@(Math.Round(Model.SleepLength?.max ?? 0) + 1)" style="border-bottom: none;">
            <div class="title">@T("filters.sleeplength")</div>
            <div class="form-inline">
                <div class="form-group">
                    <span>@T("filters.from"): </span>
                    <input class="form-control" name="MinSleeplength" type="text" id="slider-sleeplength-a1">
                    <span>@T("filters.to"): </span>
                    <input class="form-control" name="MaxSleeplength" type="text" id="slider-sleeplength-a2">
                </div>
            </div>
            <div id="slider-sleeplength-r" class="slider-range"></div>
        </div>
        <div class="inner-wrap f-slider" data-filter-number="sleepwidth" data-min="@(Math.Round(Model.SleepWidth?.min ?? 0))" data-max="@(Math.Round(Model.SleepWidth?.max ?? 0) + 1)">
            <div class="title">@T("filters.sleepwidth")</div>
            <div class="form-inline">
                <div class="form-group">
                    <span>@T("filters.from"): </span>
                    <input class="form-control" name="MinSleepwidth" type="text" id="slider-sleepwidth-a1">
                    <span>@T("filters.to"): </span>
                    <input class="form-control" name="MaxSleepwidth" type="text" id="slider-sleepwidth-a2">
                </div>
            </div>
            <div id="slider-sleepwidth-r" class="slider-range"></div>
        </div>
    }
    @await Html.PartialAsync("_FilterSpecsBox", Model.SpecificationFilter)
    <div class="inner-wrap text-center">
        <div class="btn-group-vertical">
            <button onclick="submitFilters()" id="submit-filters" class="btn btn-lg btn-blue rounded">@T("filters.submit")</button>
            <button type="button" class="btn btn-link" onclick="clearFilters()">@T("filters.clear")</button>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () { 
        setTimeout(fillFilters(), 500);
    });
    function fillFilters() {
        $("[name=MinPrice]").val(@(Model.Price?.from == 0 ? "" : Model.Price?.from.ToString()));
        $("[name=MaxPrice]").val(@(Model.Price?.to == 0 ? "" : Model.Price?.to.ToString()));
        $("[name=MinLength]").val(@(Model.Length?.from == 0 ? "" : Model.Length?.from.ToString()));
        $("[name=MaxLength]").val(@(Model.Length?.to == 0 ? "" : Model.Length?.to.ToString()));
        $("[name=MinWidth]").val(@(Model.Width?.from == 0 ? "" : Model.Width?.from.ToString()));
        $("[name=MaxWidth]").val(@(Model.Width?.to == 0 ? "" : Model.Width?.to.ToString()));
        $("[name=MinHeight]").val(@(Model.Height?.from == 0 ? "" : Model.Height?.from.ToString()));
        $("[name=MaxHeight]").val(@(Model.Height?.to == 0 ? "" : Model.Height?.to.ToString()));
        $("[name=MinSleeplength]").val(@(Model.SleepLength?.from == 0 ? "" : Model.SleepLength?.from.ToString()));
        $("[name=MaxSleeplength]").val(@(Model.SleepLength?.to == 0 ? "" : Model.SleepLength?.to.ToString()));
        $("[name=MinSleepwidth]").val(@(Model.SleepWidth?.from == 0 ? "" : Model.SleepWidth?.from.ToString()));
        $("[name=MaxSleepwidth]").val(@(Model.SleepWidth?.to == 0 ? "" : Model.SleepWidth?.to.ToString()));
    }

    function clearFilters() {
        window.location.replace(window.location.href.substring(0, window.location.href.indexOf('?')));
    }

    function submitFilters() {
        $(".filters-data .form-group input").each(function () {
            if ($(this).val().trim().length == 0) {
                $(this).val(0);
            }
        });
        var query = getQuery();
        
        window.location.replace(query);
    }

    $(document).ready(function () {
        $(".filters-data .form-group input").on("change", function (event) {
                showPopover("@T("popover.found")" + ": " + 0, "@T("popover.btn.show")", event.target);
            console.log("changed");
            $.ajax({
                url: "@Url.Action("GetFilteredProductsCount", "Catalog")" + getQuery(),
                type: "POST",
                dataType: 'json',
                traditional: true,
                data: {
                    categoryId: @Model.CategoryId,
                }
            }).done(function (response) {
                $("#filter-count").text("@T("popover.found")" + ": " + response);
            });
        });
        $(".filters-data .form-check input").on("click", function (event) {
            console.log("clicked");
            showPopover("@T("popover.found")" + ": " + 0, "@T("popover.btn.show")", event.target);
            $.ajax({
                url: "@Url.Action("GetFilteredProductsCount", "Catalog")" + getQuery(),
                type: "POST",
                dataType: 'json',
                traditional: true,
                data: {
                    categoryId: @Model.CategoryId,
                }
            }).done(function (response) {
                
                $("#filter-count").text("@T("popover.found")" + ": " + response);
            });
        });
    });

    function getQuery() {
        var query = "?price=" + $("[name=MinPrice]").val() + "-" + $("[name=MaxPrice]").val();
        if ('@((bool)ViewBag.HasHeight)'.toLowerCase() == 'true') {
            query += "&height=" + $("[name=MinHeight]").val() + "-" + $("[name=MaxHeight]").val();
        }
        query += "&length=" + $("[name=MinLength]").val() + "-" + $("[name=MaxLength]").val();
        query += "&width=" + $("[name=MinWidth]").val() + "-" + $("[name=MaxWidth]").val();
        if ('@((bool)ViewBag.HasSleepSizes)'.toLowerCase() == 'true')
        {
            query += "&sleeplength=" + $("[name=MinSleeplength]").val() + "-" + $("[name=MaxSleeplength]").val();
            query += "&sleepwidth=" + $("[name=MinSleepwidth]").val() + "-" + $("[name=MaxSleepwidth]").val();
        }
        var specsArr = [];
        $(".filters-data input.form-check-input:checked").each(function () {
            specsArr.push(this.value);
        });
        if (specsArr.length > 0) {
            query += "&specs=" + specsArr.sort().toString();
        }
        query += "&orderby=" + $("[name=orderby]:checked").val();
        return query;
    }
</script>